@model RecommendationsViewModel
@{
    ViewData["Title"] = "spotify_rating";
}

<div id="pageWrapper" class="position-relative" style="min-height: 100vh;">
    <partial name="Components/_Loading" />

    <div id="app" style="display: none;">

        <div class="card shadow-lg container p-0 my-5 col-xl-6 col-lg-8 col-md-10 col-sm-12 col-12">
            <partial name="Components/_LoadingMini" />
            <div class="py-3 px-3 px-sm-3 px-md-3 px-lg-5 px-xl-5">
                <h3 class="mb-3 text-center">Music Suggestions</h3>
                <h5 class="mb-3">Suggested Songs</h5>
                <div class="list-group songs-list">
                    @foreach (var track in Model.Tracks)
                    {
                        ListItemViewModel viewModel = new ListItemViewModel
                        {
                            PictureUrl = track.SpotifyAlbumCoverUrl,
                            Title = track.Title,
                            Subtitle = track.Artist,
                            Badge = track.AiGenre,
                            SpotifyButtonUrl = track.SpotifyUri,
                            LikeButtonUrl = $"/api/recommendations/like?track={track.SpotifyTrackId}",
                            DislikeButtonUrl = $"/api/recommendations/dislike?track={track.SpotifyTrackId}"
                        };

                        <partial name="Components/_ListItem" model="viewModel"/>
                    }
                </div>

                <h5 class="mb-3 mt-5">Suggested Playlists</h5>
                <div class="row playlists-list">
                    @foreach (var playlist in Model.Playlists)
                    {
                        <div class="col-md-6 mb-3">
                            <a href="/recommendations/playlist/@playlist.Id" class="text-decoration-none text-dark">
                                <div class="card h-100 shadow-sm hover-shadow-sm">
                                    <div class="card-body">
                                        <h6 class="card-title mb-1">@playlist.Name</h6>
                                        <p class="card-text small mb-2">@playlist.Description</p>
                                        <span class="badge bg-info">@playlist.Genre</span>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
                                        
@section Scripts {
    <script>
        const songCount = 5;
        const playlistCount = 4;
        let fetchedSongs = @Model.Tracks.Count;
        let fetchedPlaylists = @Model.Playlists.Count;

        $(document).ready(function () {
             $("#miniLoadingOverlay").hide();
            fetchInitialRecommendations();
        });

        async function fetchInitialRecommendations() {
            while (fetchedSongs < songCount) {
                await fetchSong();
            }

            while (fetchedPlaylists < playlistCount) {
                await fetchPlaylist();
            }

            $("#app").show();
        }

        async function fetchSong() {
            try {
                showSmallLoader();

                const response = await fetch("/api/recommendations/song");
                const song = await response.json();

                addSongToList(song);
                fetchedSongs++;
            } catch (error) {
                console.error("Failed to fetch song:", error);
            } finally {
                $("#app").show();
                hideSmallLoader();
            }
        }

        async function fetchPlaylist() {
            try {
                showSmallLoader();

                const response = await fetch("/api/recommendations/playlist");
                const playlist = await response.json();

                addPlaylistToList(playlist);
                fetchedPlaylists++;
            } catch (error) {
                console.error("Failed to fetch playlist:", error);
            } finally {
                $("#app").show();
                hideSmallLoader();
            }
        }

        function addSongToList(song) {
            $(".songs-list").append(`
                <a href="${song.spotifyUri}" class="list-group-item list-group-item-action d-flex gap-3 py-3 align-items-center text-decoration-none" target="_blank">
                    <img src="${song.spotifyAlbumCoverUrl}" class="rounded shadow-sm flex-shrink-0" style="width: 64px; height: 64px; object-fit: cover;" alt="Cover" />
                    <div class="flex-grow-1">
                        <div class="fw-semibold">${song.title}</div>
                        <div class="text-muted small">${song.artist}</div>
                    </div>
                    <span class="badge bg-info">${song.aiGenre}</span>
                </a>
            `);
        }

        function addPlaylistToList(playlist) {
            $(".playlists-list").append(`
                 <div class="col-md-6">
                    <a href="/recommendations/playlist/${playlist.id}" class="text-decoration-none text-dark">
                        <div class="card h-100 shadow-sm hover-shadow-sm">
                            <div class="card-body">
                                <h6 class="card-title mb-1">${playlist.name}</h6>
                                <p class="card-text small mb-2">${playlist.description}</p>
                                <span class="badge bg-info">{playlist.genre}</span>
                            </div>
                        </div>
                    </a>
                </div>
            `);
        }

        function showSmallLoader() {
            $("#miniLoadingOverlay").show();
        }

        function hideSmallLoader() {
            $("#miniLoadingOverlay").hide();
        }
    </script>
}
