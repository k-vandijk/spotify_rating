@model HistoryViewModel
@{
    ViewData["Title"] = "spotify_rating";
}
<div class="card shadow-lg container p-0 my-5 col-xl-6 col-lg-8 col-md-10 col-sm-12 col-12">
    <div class="py-5 px-0 px-sm-1 px-md-3 px-lg-5 px-xl-5">
        <h3 class="text-center">@Model.Rated / @Model.Total</h3>

        <div class="list-group">
            @foreach (var track in Model.Tracks.OrderByDescending(r => r.RatedAtUtc))
            {
                <a class="list-group-item list-group-item-action d-flex gap-3 py-3 align-items-center text-decoration-none" href="@track.SpotifyUri" target="_blank" rel="noopener noreferrer">
                    <img src="@track.SpotifyAlbumCoverUrl" class="rounded shadow-sm" style="width: 64px; height: 64px; object-fit: cover;" alt="Cover"/>
                    <div class="flex-grow-1">
                        <div class="fw-semibold">@track.Title</div>
                        <div class="small">@track.Artist</div>
                        <div class="small" title="Rated at">
                            <i class="fa-regular fa-calendar me-2 text-success"></i>
                            @track.RatedAtUtc!.Value.ToLocalTime().ToString("dd-MM-yyyy HH:mm")
                        </div>
                    </div>
                    @if (track.Rating == TrackRating.LIKE)
                    {
                        <span class="badge bg-success">@track.Rating.ToString()</span>
                    }
                    @if (track.Rating == TrackRating.SUPER_LIKE)
                    {
                        <span class="badge bg-primary">@track.Rating.ToString()</span>
                    }
                    @if (track.Rating == TrackRating.DISLIKE)
                    {
                        <span class="badge bg-danger">@track.Rating.ToString()</span>
                    }
                </a>
            }
        </div>
    </div>
</div>