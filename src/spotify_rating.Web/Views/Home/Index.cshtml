@model HomeViewModel
@{
    ViewData["Title"] = "spotify_rating";
}

<div class="card shadow-lg container p-0 my-5 col-lg-6 col-md-8 col-sm-10 overflow-hidden">
    <div class="position-relative">
        <div class="progress" style="height: 6px; border-radius: 0;">
            <div id="trackProgress" class="progress-bar bg-success" role="progressbar"></div>
        </div>
        <div class="position-absolute top-100 end-0 mt-1 me-3 small" style="z-index: 1;">
            <span id="ratedCount">0</span> / <span id="totalCount">0</span>
        </div>
    </div>

    <div class="p-5">
        <div class="text-center position-relative mb-4">
            <img id="cover" class="img-fluid rounded shadow-sm mb-4" style="max-height: 300px;" src="" alt="Album cover" />

            <div class="d-flex justify-content-center align-items-center gap-2 mb-3">
                <h5 id="trackInfo" class="fw-semibold mb-0"></h5>
                <a id="spotifyLink" href="#" target="_blank" rel="noopener"
                   class="btn btn-spotify btn-sm rounded-circle shadow-sm d-flex align-items-center justify-content-center"
                   style="width: 32px; height: 32px;"
                   title="Open in Spotify">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/8/84/Spotify_icon.svg" alt="Spotify"
                         style="width: 18px; height: 18px;">
                </a>
            </div>
        </div>

        <div class="row gx-3">
            <div class="col-4 d-grid">
                <button id="btnYes" class="btn btn-success btn-lg shadow-sm">
                    <i class="fa-solid fa-thumbs-up"></i>
                </button>
            </div>
            <div class="col-4 d-grid">
                <button id="btnSuper" class="btn btn-primary btn-lg shadow-sm">
                    <i class="fa-solid fa-heart"></i>
                </button>
            </div>
            <div class="col-4 d-grid">
                <button id="btnNo" class="btn btn-danger btn-lg shadow-sm">
                    <i class="fa-solid fa-thumbs-down"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let tracks = @Html.Raw(Json.Serialize(Model.Records));
        let currentTrackIndex = 0;
        let currentProgressIndex = @Model.RatedRecords;

        function renderTrack(index) {
            if (!tracks || index >= tracks.length) {
                $("#cover").attr("src", "");
                $("#trackInfo").text("No more tracks!");
                return;
            }

            const track = tracks[index];
            $("#cover").attr("src", track.albumCoverUrl);
            $("#trackInfo").text(`${track.title} – ${track.artist}`);
        }

        function rateTrack(trackId, rating) {
            const url = `/api/records/rate-record?recordId=${encodeURIComponent(trackId)}&rating=${rating}`;
            return fetch(url, {
                method: "POST"
            });
        }

        function updateProgressBar() {
            const total = tracks.length;
            const current = currentProgressIndex + 1;
            const percentage = Math.min((current / total) * 100, 100);

            $("#trackProgress")
                .css("width", `${percentage}%`)
                .attr("aria-valuenow", current);

            $("#totalCount").text(total);
            $("#ratedCount").text(current);
        }

        $(document).ready(function () {
            $("#btnYes").click(function () {
                const track = tracks[currentTrackIndex];
                rateTrack(track.id, 0)
                    .then(() => {
                        toastr.success(`You liked "${track.title}"!`);
                        currentTrackIndex++;
                        renderTrack(currentTrackIndex);
                        currentProgressIndex++;
                        updateProgressBar();
                    })
                    .catch(err => toastr.error("Failed to like the track."));
            });

            $("#btnSuper").click(function () {
                const track = tracks[currentTrackIndex];
                rateTrack(track.id, 1)
                    .then(() => toastr.success(`You super liked "${track.title}"!`))
                    .catch(err => toastr.error("Failed to super like the track."));

                currentTrackIndex++;
                renderTrack(currentTrackIndex);
                currentProgressIndex++;
                updateProgressBar();
            });

            $("#btnNo").click(function () {
                const track = tracks[currentTrackIndex];
                  rateTrack(track.id, 2)
                    .then(() => toastr.success(`You disliked "${track.title}"!`))
                    .catch(err => toastr.error("Failed to dislike the track."));

                currentTrackIndex++;
                renderTrack(currentTrackIndex);
                currentProgressIndex++;
                updateProgressBar();
            });

            renderTrack(currentTrackIndex);
            updateProgressBar();
        });
    </script>
}
