@{
    ViewData["Title"] = "spotify_rating";
}

<div class="card shadow-lg container p-0 my-5 col-lg-6 col-md-8 col-sm-10 overflow-hidden">
    <div class="progress" style="height: 6px; border-radius: 0;">
        <div id="trackProgress" class="progress-bar bg-success" role="progressbar"
             style="width: 50%;" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">
        </div>
    </div>

    <div class="p-5">
        <div class="text-center position-relative">
            <div id="loadingSpinner"
                 class="position-absolute top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-center bg-white bg-opacity-75"
                 style="z-index: 10; display: none;">
                <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>

            <img id="cover" class="img-fluid rounded shadow-sm mb-4" style="max-height: 300px;" src="" alt="Album cover" />
            <h5 id="trackInfo" class="fw-semibold mb-4"></h5>
        </div>

        <div class="row gx-3">
            <div class="col-4 d-grid">
                <button id="btnYes" class="btn btn-success btn-lg shadow-sm">
                    <i class="fa-solid fa-thumbs-up"></i>
                </button>
            </div>
            <div class="col-4 d-grid">
                <button id="btnSuper" class="btn btn-primary btn-lg shadow-sm">
                    <i class="fa-solid fa-heart"></i>
                </button>
            </div>
            <div class="col-4 d-grid">
                <button id="btnNo" class="btn btn-danger btn-lg shadow-sm">
                    <i class="fa-solid fa-thumbs-down"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const tracksCacheKey = "likedTracks";
        let currentIndex = 0;
        let tracks = [];

        async function loadTracks() {
            $("#loadingSpinner").show();

            try {
                const cached = localStorage.getItem(tracksCacheKey);
                if (cached) {
                    console.log("Using cached tracks...");
                    tracks = shuffle(JSON.parse(cached));
                } else {
                    console.log("Fetching tracks from server...");
                    const response = await fetch("/api/spotify/liked-tracks");
                    tracks = shuffle(await response.json());
                    localStorage.setItem(tracksCacheKey, JSON.stringify(tracks));
                }

                renderTrack(currentIndex);
            } catch (err) {
                toastr.error("Failed to load tracks.");
                console.error("Track loading error:", err);
            } finally {
                $("#loadingSpinner").addClass("d-none");
            }
        }

        function shuffle(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }

        function renderTrack(index) {
            if (!tracks || index >= tracks.length) {
                $("#cover").attr("src", "");
                $("#trackInfo").text("No more tracks!");
                return;
            }

            const track = tracks[index];
            $("#cover").attr("src", track.albumCoverUrl);
            $("#trackInfo").text(`${track.trackName} – ${track.artist}`);
        }

        $(document).ready(function () {
            $("#btnYes").click(function () {
                const track = tracks[currentIndex];
                currentIndex++;
                renderTrack(currentIndex);
                toastr.success(`You liked "${track.trackName}"!`);
            });

            $("#btnSuper").click(function () {
                const track = tracks[currentIndex];
                currentIndex++;
                renderTrack(currentIndex);
                toastr.success(`You **super liked** "${track.trackName}"!`);
            });

            $("#btnNo").click(function () {
                const track = tracks[currentIndex];
                currentIndex++;
                renderTrack(currentIndex);
                toastr.success(`You disliked "${track.trackName}".`);
            });

            loadTracks();
        });
    </script>
}
